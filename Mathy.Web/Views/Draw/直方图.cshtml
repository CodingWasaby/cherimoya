@{
    Layout = null;
}
@using Mathy.Model.Draw
@model Histogram
@{
    Layout = null;
    var datas = string.Join("&", Model.Datas.Select(m => string.Join(",", m)));
}
<!DOCTYPE html>
<html style="height: 100%">
<head>
    <meta charset="utf-8">
</head>
<body style="height: 100%; margin: 0">
    <div id="container" style="height: 100%"></div>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/echarts.min.js"></script>
    <script type="text/javascript">
        var dom = document.getElementById("container");
        var myChart = echarts.init(dom);
        var app = {};
        option = null;
        app.title = '直方图';

        var dataAll = [];
        var dataNames = [];
        var series = [];
        dataAll = '@datas'.split('&');
        for (var i = 0; i < dataAll.length; i++) {
            dataNames.push("数据" + (i + 1));
            var sdata = [];
            var sd = dataAll[i].split(',');
            for (var j = 0; j < sd.length; j++) {
                sdata.push(sd[j].split(':'));
            }
            if (i === 0) {
                var s = {
                    name: "数据" + (i + 1),
                    type: 'line',
                    smooth: true,
                    areaStyle: {
                        color: 'blue'
                    },
                    color: 'blue',
                    data: sdata
                };
                series.push(s);
            }
            else {
                var s1 = {
                    name: "数据" + (i + 1),
                    type: 'line',
                    smooth: true,
                    data: sdata
                };
                series.push(s1);
            }
        }

        option = {
            toolbox: {
                show: true,
                feature: {
                    dataView: { readOnly: true },
                    restore: {},
                    saveAsImage: {}
                }
            },
            tooltip: {
                trigger: 'none',
                axisPointer: {
                    type: 'cross'
                }
            },
            legend: {
                data: dataNames
            },
            xAxis: [
                {
                    type: 'value',
                      min:"dataMin"
                }               
            ],
            yAxis: [
                {
                    type: 'value',
                      min:"dataMin"
                }               
            ],
            series: series
        };
        ;
        if (option && typeof option === "object") {
            myChart.setOption(option, true);
        }
    </script>
</body>
</html>