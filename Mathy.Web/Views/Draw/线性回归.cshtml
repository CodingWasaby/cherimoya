
@using Mathy.Model.Draw
@model LinearRegression
@{
    Layout = null;
    var datas = string.Join(",", Model.Datas);
    var formatter = "y= " + Model.K + " * x + " + Model.B;
    var markB = Model.B;
    var markE = (Model.Datas.Count() + 1) * Model.K + Model.B;
}
<!DOCTYPE html>
<html style="height: 100%">
<head>
    <meta charset="utf-8">
</head>
<body style="height: 100%; margin: 0">
    <div id="container" style="height: 100%"></div>
    <script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/echarts.min.js"></script>
    <script type="text/javascript">
        var dataAll =[];
        var datas = '@datas';
        var a = datas.split(",");
        for (var i = 0; i < a.length; i++) {
            var ad = [];
            ad.push(i + 1);
            ad.push(a[i]);
            dataAll.push(ad);
        }
        var dom = document.getElementById("container");
        var myChart = echarts.init(dom);
        option = null;

        var markLineOpt = {
            animation: false,
            label: {
                normal: {
                    formatter: '@formatter',
                    textStyle: {
                        align: 'right'
                    }
                }
            },
            lineStyle: {
                normal: {
                    type: 'solid'
                }
            },
            tooltip: {
                formatter:  '@formatter'
            },
            data: [[{
                coord: [0, @markB],
                symbol: 'none'
            }, {
                coord: [@(Model.Datas.Count()+1), @markE],
                symbol: 'none'
            }]]
        };
        console.log(markLineOpt);
        option = {
            title: {
                text: '线性回归图',
                x: 'center',
                y: 0
            },
            toolbox: {
                show: true,
                feature: {
                    dataView: { readOnly: true },
                    restore: {},
                    saveAsImage: {}
                }
            },
            tooltip: {
                formatter: 'Test {a}: ({c})'
            },
            xAxis: [
                { gridIndex: 0, min: 0, max: '@(Model.Datas.Count()+1)' }
            ],
            yAxis: [
                { gridIndex: 0, min: @(markB-1), max: '@(markE+1)' }
            ],
            series: [
                {
                    name: '一元线性回归',
                    type: 'scatter',
                    xAxisIndex: 0,
                    yAxisIndex: 0,
                    data: dataAll,
                    markLine: markLineOpt,
                    label: {
                        show: true,
                        position: 'right',
                        color: 'black'

                    }

                }
            ]
        };
        myChart.setOption(option, true);
    </script>
</body>
</html>